eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    hostname: localhost


# spring:
#   kafka:
#     bootstrap-servers: localhost:9092
   # topic:
     # newCartItem: NEW_CART_ITEM_TOPIC
     
     
spring:
  kafka:
    consumer:
      bootstrap-servers: localhost:9092
  #    group-id: group_id
      auto-offset-reset: earliest
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      bootstrap-servers: localhost:9092
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    topic:  
      newCartItem: newItemInCart
      superhero-topic: superhero-topic
      productPulled: productGot
      userLogin:userLogin
      
# user:
#   topic:
#     logIn: user-log-in
#     group:
#       id: group_1
#   topic:
#     signUp: user-sign-up
#     group:
#       id: group_2
      



# cart:
#   topic:
#     group:
#       id: group_2
#     name: test-log
   

microservice:
  cart-service:
    endpoints:
      endpoint:
        uri: http://CART-SERVICE/cart/newItem
  order-service:
    endpoints:
      endpoint:
        uri: http://ORDER-SERVICE/order/bookOrder
  customer-service:
    endpoints:
      endpoint:
        uri: http://CUSTOMER-SERVICE/
